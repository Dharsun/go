OAUTH_Client_secret = "2222222"
OAUTH_Client_secret = "3333333ijbsvjk44444444444"
liuvssecretoa;kr = "ttttttttt"
liuvssecretoa;kr = "1234556"




def search_in_zip(zip_filename, keyword_patterns):
    results = {keyword: [] for keyword in keyword_patterns.keys()}
    
    with zipfile.ZipFile(zip_filename, 'r') as zip_ref:
        for file_info in zip_ref.infolist():
            with zip_ref.open(file_info) as file:
                try:
                    content = file.read().decode('utf-8')
                except UnicodeDecodeError:
                    content = file.read()  # Read the file as binary
                for keyword, pattern in keyword_patterns.items():
                    matches = re.findall(pattern, content, re.IGNORECASE)
                    if matches:
                        results[keyword].extend([(match, file_info.filename) for match in matches])
    
    return results

Traceback (most recent call last):                                                                                        File "C:\Users\a754765\Desktop\2.py", line 135, in <module>                                                               main(args.zip_filename)                                                                                               File "C:\Users\a754765\Desktop\2.py", line 122, in main                                                                   keyword_results = search_in_zip(zip_filename, keywords)                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                               File "C:\Users\a754765\Desktop\2.py", line 24, in search_in_zip                                                           matches = re.findall(pattern, content, re.IGNORECASE)                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                 File "C:\Users\a754765\AppData\Local\Programs\Python\Python311\Lib\re\__init__.py", line 216, in findall                  return _compile(pattern, flags).findall(string)                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                     TypeError: cannot use a string pattern on a bytes-like object 
